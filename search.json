[{"title":"OOP上半部分","url":"/2022/07/15/OOP%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/","content":"暑假学习OOP\n\n\n代码Dogs\npackage com.google.bean;    import lombok.Getter;  import lombok.Setter;  import lombok.ToString;    // 狗的特性和共性  // 类当中的变量和方法都称为属性    // @Getter 和 @Setter 写在类上面对于所有变量都行  // 也可以之对于单独的一个变量使用     @Getter @Setter private String name;@Getter  @Setter  @ToString  public class Dogs &#123;        // 成员变量：它们组成构成了类      // 狗的名字        // public 共有的,用户可以为所欲为      // private 私有的，用户不能为所欲为      private String name;      // 狗种类      private String variety;      // 狗年龄      private int age;      // 狗的食物      private String food;        // 静态变量 所属于类      // 使用 private 封装后对于静态变量只需要一个 Getter 函数即可      private static String plot = &quot;马古岗联合国&quot;;        // 构造方法      // 无参构造器      public Dogs() &#123;        &#125;        // 自己写的一个构造器，这个时候需要写一个 无参构造器（上面的那个函数）      public Dogs(String name, String variety, int age, String food) &#123;          this.name = name;          this.variety = variety;          this.age = age;          this.food = food;      &#125;        public Dogs(String name) &#123;          this.name = name;      &#125;        // 设计的一个函数，保证用户能输入age的值，但是不能乱搞，所以 一个get、一个set 函数      // 这种称为OOP的封装      // 安装 lombok后使用上面的注释即可      // 对于特殊的你可以单独写 -&gt; 方法的重载      public void setAge(int age) &#123;          if (age &lt;= 0 || age &gt;= 100) &#123;              System.out.println(&quot;您的输入不合法，已经将年龄清零&quot;);              this.age = 0;          &#125; else &#123;              this.age = age;          &#125;        &#125;          // 狗的行为      public void eat() &#123;          System.out.println(name + &quot;在吃饭，吃的...&quot;);      &#125;        public void sleep() &#123;          System.out.println(name + &quot;狗睡觉&quot;);      &#125;        public void sick() &#123;          System.out.println(&quot;狗生病&quot;);      &#125;        // 对于 静态变量 plot 的获取      public static String getPlot() &#123;          return plot;      &#125;        // 静态方法 同样也属于类      public static void vaccination() &#123;          System.out.println(&quot;所有的狗都需要来卫生院打狂犬疫苗&quot;);      &#125;  &#125;\n\nApplication\n// 使用界面import com.google.bean.Dogs;    public class Application &#123;      public static void main(String[] args) &#123;            Dogs zhangDog = new Dogs(&quot;jerry&quot;);            zhangDog.setFood(&quot;狗粮&quot;);          zhangDog.setVariety(&quot;柯基&quot;);          zhangDog.setAge(100);            System.out.println(&quot;狗的基本信息为：&quot; + zhangDog);            zhangDog.eat();          zhangDog.sleep();          zhangDog.sick();            Dogs.vaccination();          System.out.println(&quot;狗子属于：&quot; + Dogs.getPlot());      &#125;  &#125;\n\n\n类、对象以及对象的信息、行为Dogs代码块中的 Dogs 就是一个类，它表示狗这一类。\n里面的 age、variety、name等变量就是狗的一个基本信息，eat、sleep等方法表示的是狗的行为。\n在另外一个代码块中，你创建以zhangDog 这一变量其实就是创建了一个用户（使用对象）\npublic 和 privatepublic 共有的,用户可以为所欲为private 私有的，用户不能为所欲为\n封装使用 private 把狗的基本信息都封装起来，这样用户不能随便修改狗的信息，只能在你设定的范围内来修改\nGetter 和 Setter创建 get 和 set 函数来使用户可以访问到Dogs类中的变量的同时必须按照你设定的条件来设置狗的信息以及得到狗的信息\npublic void setAge(int age) &#123;      if (age &lt;= 0 || age &gt;= 100) &#123;          System.out.println(&quot;您的输入不合法，已经将年龄清零&quot;);          this.age = 0;      &#125; else &#123;          this.age = age;      &#125;    &#125;    public int getAge() &#123;      return age;  &#125;\n\n调用\nzhangDog.setFood(&quot;狗粮&quot;);  zhangDog.setVariety(&quot;柯基&quot;);  zhangDog.setAge(100);  System.out.println(zhangDog.getAge());  System.out.println(zhangDog.getFood());  System.out.println(zhangDog.getVariety());\n\nlombok导入 Lombok 的 jar 包后，可以直接使用 @Getter @Setter 便可以使用了\n@Getter 和 @Setter 写在类上面对于所有变量都行  \n也可以之对于单独的一个变量使用     @Getter @Setter private String name;\n对于某些变量需要特殊的修饰的可以再写一个方法来修饰（方法的重载）\ntoString对于需要把zhangDog的信息全部输出时候，我们可以写一个toString方法来输出\n@Override  public String toString() &#123;      return &quot;Dogs&#123;&quot; +              &quot;name=&#x27;&quot; + name + &#x27;\\&#x27;&#x27; +              &quot;, variety=&#x27;&quot; + variety + &#x27;\\&#x27;&#x27; +              &quot;, age=&quot; + age +              &quot;, food=&#x27;&quot; + food + &#x27;\\&#x27;&#x27; +              &#x27;&#125;&#x27;;  &#125;\n\n另外可以使用 @toString 的方法\n构造方法构造器无参构造器static关键字静态变量静态方法静态代码块this关键字注销账户空指针异常垃圾回收","categories":["java"],"tags":["OOP","java"]},{"title":"PTA-C语言","url":"/2022/07/16/PTA-C%E8%AF%AD%E8%A8%80/","content":"大一在PTA写的题目\n\n\n题目集1题目：1 戍边英雄去年六月\n远在我国西北边陲广袤的大地上\n五位戍边英雄挺身而出\n用伟岸的身躯守护着\n中华大地上的每一寸“肌肤”\n\n他们分别是陈红军、王焯冉、祁发宝、肖思远、陈祥榕\n让我们用编程的形式向这些英雄致敬！\n输入样例:无\n\n输出样例:************************ Zhi Jing Ying Xiong **     Chen Hongjun    **     Wang Zhuoran    **       Qi Fabao      **     Xiao Siyuan     **     Chen Xiangrong  ************************\n\n题解分析代码#include&lt;stdio.h&gt;int main ()&#123;\tprintf(&quot;***********************\\n&quot;);\tprintf(&quot;* Zhi Jing Ying Xiong *\\n&quot;);\tprintf(&quot;*     Chen Hongjun    *\\n&quot;);\tprintf(&quot;*     Wang Zhuoran    *\\n&quot;);\tprintf(&quot;*       Qi Fabao      *\\n&quot;);\tprintf(&quot;*     Xiao Siyuan     *\\n&quot;);\tprintf(&quot;*     Chen Xiangrong  *\\n&quot;);\tprintf(&quot;***********************&quot;);\treturn 0; &#125;\n\n题目：2 Welcome to You!本题要求编写程序，输出一个短句“Welcome to You!”。\n输入格式:本题目没有输入。\n输出格式:在一行中输出短句“Welcome to You!”。\n题解分析代码#include &lt;stdio.h&gt;int main()&#123;\tprintf(&quot;Welcome to You!&quot;);\treturn 0;&#125;\n\n题目：3 输出倒三角图案本题要求编写程序，输出指定的由“*”组成的倒三角图案。\n输入格式:本题目没有输入。\n输出格式:按照下列格式输出由“*”组成的倒三角图案。\n* * * * * * *  * *   *\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;\tprintf(&quot;* * * *\\n&quot;);\tprintf(&quot; * * *\\n&quot;);\tprintf(&quot;  * *\\n&quot;);\tprintf(&quot;   *\\n&quot;);\t\treturn 0; &#125;\n\n题目：4 打印菜单本题要求编写程序，在屏幕上打印5行菜单。\n输入格式:本题目没有输入。\n输出格式:按照下列格式打印菜单，每行显示一句。注意除了每行的换行不能有任何多余字符。\n[1] Select crisps\n[2] Select popcorn\n[3] Select chocolate\n[4] Select cola\n[0] Exit\n输入样例:输出样例:[1] Select crisps[2] Select popcorn[3] Select chocolate[4] Select cola[0] Exit\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;\tprintf(&quot;[1] Select crisps\\n&quot;);\tprintf(&quot;[2] Select popcorn\\n&quot;);\tprintf(&quot;[3] Select chocolate\\n&quot;);\tprintf(&quot;[4] Select cola\\n&quot;);\tprintf(&quot;[0] Exit\\n&quot;);\treturn 0;&#125;\n\n题目：5 混合类型数据格式化输入本题要求编写程序，顺序读入浮点数1、整数、字符、浮点数2，再按照字符、整数、浮点数1、浮点数2的顺序输出。\n输入格式：输入在一行中顺序给出浮点数1、整数、字符、浮点数2，其间以1个空格分隔。\n输出格式：在一行中按照字符、整数、浮点数1、浮点数2的顺序输出，其中浮点数保留小数点后2位。\n输入样例：2.12 88 c 4.7\n\n输出样例：c 88 2.12 4.70\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;\tint a;\tchar b;\tfloat c, d;\tscanf(&quot;%f %d %c %f&quot;, &amp;c, &amp;a, &amp;b, &amp;d);\tprintf(&quot;%c %d %.2f %.2f\\n&quot;,b,a,c,d);\treturn 0;&#125;\n\n题目：6 计算摄氏温度给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C&#x3D;5×(F−32)&#x2F;9。题目保证输入与输出均在整型范围内。\n输入格式:输入在一行中给出一个华氏温度。\n输出格式:在一行中按照格式“Celsius &#x3D; C”输出对应的摄氏温度C的整数值。\n输入样例:150\n\n输出样例:Celsius = 65\n\n题解分析代码#include&lt;stdio.h&gt;int main() &#123;\tint C, F;\tscanf(&quot;%d&quot;, &amp;F);\tC = 5 * (F - 32) / 9;\tprintf(&quot;Celsius = %d&quot;, C);\treturn 0;&#125;\n\n题目：7 整数算术运算本题要求编写程序，计算并输出2个正整数的和、差、积、商与余数。题目保证输入和输出全部在整型范围内。\n输入格式:输入在一行中给出2个正整数A和B。\n输出格式:在5行中按照格式“A 运算符 B &#x3D; 结果”顺序输出和、差、积、商与余数。\n输入样例:5 3\n\n输出样例:在这里给出相应的输出。例如：\n5 + 3 = 85 - 3 = 25 * 3 = 155 / 3 = 15 % 3 = 2\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;    int A,B;    scanf(&quot;%d%d&quot;,&amp;A,&amp;B);    printf(&quot;%d + %d = %d\\n&quot;,A,B,A+B);    printf(&quot;%d - %d = %d\\n&quot;,A,B,A-B);    printf(&quot;%d * %d = %d\\n&quot;,A,B,A*B);    printf(&quot;%d / %d = %d\\n&quot;,A,B,A/B);    printf(&quot;%d %% %d = %d&quot;,A,B,A%B);    return 0;&#125;\n\n题目：8 计算火车运行时间本题要求根据火车的出发时间和达到时间，编写程序计算整个旅途所用的时间。\n输入格式：输入在一行中给出2个4位正整数，其间以空格分隔，分别表示火车的出发时间和到达时间。每个时间的格式为2位小时数（00-23）和2位分钟数（00-59），假设出发和到达在同一天内。\n输出格式：在一行输出该旅途所用的时间，格式为“hh:mm”，其中hh为2位小时数、mm为2位分钟数。\n输入样例：1201 1530\n\n输出样例：03:29\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;\tint x, y, a, b, c, e, h, m;\tscanf(&quot;%d %d&quot;, &amp;x, &amp;y);\ta = x / 100;\tb = x % 100;\tc = y / 100;\te = y % 100;\tif (b &lt;= e)\t&#123;\t\th = c - a;\t\tm = e - b;\t&#125;\telse\t&#123;\t\th = c - a - 1;\t\tm = e - b + 60;\t&#125;\tprintf(&quot;%02d:%02d&quot;, h, m);\treturn 0;&#125;\n\n题目集2题目:1 密码转换输入一个大写字母，把它往后移动两个位置加密，即A变C，B变D，X变Z，Z变B\n输入格式:一行，一个大写字母\n输出格式:一行，一个大写字母\n输入样例:D\n\n输出样例:F\n\n题解分析代码#include &lt;stdio.h&gt;int main() &#123;\tchar a;\tscanf(&quot;%c&quot;, &amp;a);\tif (a == &#x27;Y&#x27;)\t&#123;\t\tprintf(&quot;A&quot;);\t&#125;\telse\t&#123;\t\tif (a == &#x27;Z&#x27;)\t\t&#123;\t\t\tprintf(&quot;B&quot;);\t\t&#125;\t\telse\t\t&#123;\t\t\tprintf(&quot;%c&quot;, a + 2);\t\t&#125;\t&#125;\treturn 0;&#125;\n\n题目：2 求圆锥体体积编写程序，根据用户输入的圆锥底面半径r（整型）和高h（整型），计算圆锥体的体积。pi的取值为3.14159。 圆锥体体积的计算公式如下：\n\n输入格式:输入半径r（整型）和高h（整型）。\n输出格式:输出圆锥体体积，结果保留2位小数。\n输入样例:10 15\n\n输出样例:v=1570.79\n\n题解分析代码#include&lt;stdio.h&gt;#define PI 3.14159int main ()&#123;    int r,h;    double v;    scanf(&quot;%d%d&quot;,&amp;r,&amp;h);    v=PI*r*r*h/3;    printf(&quot;v=%.2lf&quot;,v);    return 0;&#125;\n\n题目：3 组合一个新的整数编写程序输入4个一位的非负整数，依次作为个、十、百、千位组合成一个新的整数，最后输出结果。\n输入格式:在一行中输入4个一位非负整数，以空格分隔。\n输出格式:输出组合成的新整数，最后换行。\n输入样例:1 3 6 9\n\n输出样例:在这里给出相应的输出。例如：\n9631\n\n题解分析代码#include&lt;stdio.h&gt;int main ()&#123;    unsigned int a,b,c,d;    int sum=0;    scanf(&quot;%u%u%u%u&quot;,&amp;a,&amp;b,&amp;c,&amp;d);    sum=d;    sum=sum*10+c;    sum=sum*10+b;    sum=sum*10+a;    printf(&quot;%d&quot;,sum);    return 0;&#125;\n\n题目：4 程序员二战后期，催生了世上第一台通用型计算机——“ENIAC”的开发。关于ENIAC，很少有人知道，ENIAC的诞生离不开6位女程序员。她们是Jean Bartik、Kathleen Antonelli、Ruth Teitelbaum、Frances Spence、Marlyn Meltzer和Betty Holberton，她们在ENIAC的发明过程中，负责给机器编程。这6位女程序员虽然都是数学系的顶尖毕业生, 但面对第一台通用型电脑，没人知道怎么下手，她们有的只是一叠资料和接线图。她们在这台大家伙上不断的研究调试，每天要费力的去拔各种缆线、托盘，有时甚至需要爬进检修管道检修故障，更换损坏的零件…. 最终她们还是完成了这项艰难的任务，编出了程序让机器运作。\n程序员是一群善于学习、进取心超强的人。他们总是喜欢学习、尝试新事物，求知欲望相当强。我们常常能在程序员的身上看到不竭的激情与满满的正能量。\n1024是2的十次方，二进制计数的基本计量单位之一，因此每年的10月24日被大家亲切称为程序员节。我们知道，二进制数系统中，每个0或1就是一个位(bit)，位是数据存储的最小单位。其中8bit就称为一个字节（Byte）,1024B&#x3D;1KB，1024 KB&#x3D;1MB，1024 MB&#x3D;1GB等等。\n请根据输入的KB数，输出位数。\n输入格式:在一行中给出一个小于100的整数，表示KB数。\n输出格式:输出二进制位数。\n输入样例:10\n\n输出样例81920\n\n题解分析代码#include &lt;stdio.h&gt;int main ()&#123;    int a;    scanf(&quot;%d&quot;,&amp;a);    printf(&quot;%d&quot;,a*8*1024);    return 0;&#125;\n\n题目：5 计算分段函数本题目要求计算下列分段函数g(x)的值：\n\n\n输入格式:在一行中输入实数x。\n输出格式:在一行中按“g(x) &#x3D; result”的格式输出，其中x与result都保留3位小数。\n输入样例1:在这里给出一组输入。例如：\n500\n\n输出样例1:在这里给出相应的输出。例如：\ng(500.000) = 0.001\n\n输入样例2:在这里给出一组输入。例如：\n0\n\n输出样例2:在这里给出相应的输出。例如：\ng(0.000) = 0.000\n\n题解分析代码#include&lt;stdio.h&gt;int main ()&#123;    double a,result;    scanf(&quot;%lf&quot;,&amp;a);    if(a==0) &#123;        result=a;        printf(&quot;g(%.3lf) = %.3lf&quot;,a,result);    &#125; else &#123;        result=1/a/2;        printf(&quot;g(%.3lf) = %.3lf&quot;,a,result);    &#125;    return 0;&#125;\n\n题目：6 ASCII码实战给出一系列字符，有大小写英文字母和其他一些字符（仅涉及ASCII打印字符，即ASCII码值&gt;&#x3D;32），现在想让你鉴别以下这些字符。如果是英文字母则输出其ASCII码值，否则输出”illegal”（不包含引号）。\n输入格式:第一行一个整数N (0 &lt;&#x3D; N &lt;&#x3D; 1000000)，表示接下来会有多少个字符。之后N行，每行一个字符。\n输出格式:对于每个字符，如果是大小写英文字母，则输出其ASCII码值，否则输出”illegal”（不包含引号）\n输入样例:在这里给出一组输入。例如：\n3Ab#\n\n输出样例:在这里给出相应的输出。例如：\n6598illegal\n\n题解分析代码#include &lt;stdio.h&gt;#define maxn 1000000int main()&#123;\tint i, n;\tscanf(&quot;%d&quot;, &amp;n);\tgetchar();\tchar s[maxn];\tfor (i = 0; i &lt; n; i++)\t&#123;\t\tscanf(&quot;%c&quot;, &amp;s[i]);\t\tgetchar();\t&#125;\tfor (i = 0; i &lt; n; i++)\t&#123;\t\tif (s[i] &gt;= &#x27;A&#x27; &amp;&amp; s[i] &lt;= &#x27;Z&#x27; || s[i] &gt;= &#x27;a&#x27; &amp;&amp; s[i] &lt;= &#x27;z&#x27;)\t\t&#123;\t\t\tprintf(&quot;%d\\n&quot;, s[i]);\t\t&#125;\t\telse\t\t&#123;\t\t\tprintf(&quot;illegal\\n&quot;);\t\t&#125;\t&#125;\treturn 0;&#125;\n\n题目：7 求整数均值本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。\n输入格式:输入在一行中给出4个整数，其间以空格分隔。\n输出格式:在一行中按照格式“Sum &#x3D; 和; Average &#x3D; 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。\n输入样例:1 2 3 4\n\n输出样例:Sum = 10; Average = 2.5\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;    int a, b, c, d;    int Sum;    double Anverage;    scanf(&quot;%d%d%d%d&quot;, &amp;a, &amp;b, &amp;c, &amp;d);    Sum = a + b + c + d;    Anverage = ((double)(a + b + c + d)) / 4;    printf(&quot;Sum = %d; Average = %.1lf&quot;, Sum, Anverage);    return 0;&#125;\n\n题目：8  坚持的力量本题目要求计算坚持努力后达到的能力值，以第一天的能力值initial为基数，能力值相比前一天提高的值factor就是努力参数，坚持天数为day，让我们一起来看看坚持的力量。\n计算公式为result&#x3D;initial×(1+factor)^day，其中result为坚持努力后达到的能力值，initial是能力的初始值，factor是努力参数，day是坚持天数。\n输入格式:输入在一行中顺序给出一个正实数initial、一个实数factor和一个正整数day，以空格分隔。\n输出格式:在一行中按“result &#x3D; 能力值”的格式输出，其中能力值保留两位小数。请注意等号的左右各有一个空格。\n输入样例1:1.0 0.01 365\n\n输出样例1:result = 37.78\n\n输入样例2:1.0 -0.01 365\n\n输出样例2:result = 0.03\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;    double initial, result,factor;    unsigned int day;    scanf(&quot;%lf %lf %u&quot;, &amp;initial, &amp;factor, &amp;day);    result = initial;    for (int i = 0; i &lt; day; i++) &#123;        result = result*(1 + factor);    &#125;    printf(&quot;result = %.2lf&quot;, result);    return 0;&#125;\n\n题目：9 油桶数工人师傅将油桶码成如下图所示的梯形，数了数底层的油桶数和层数，就知道有多少油桶了。你知道他是怎么算的吗？\n\n输入格式\n底层油桶数 a 和层数 b\n\n输出格式\n油桶的数量 n\n\n输入样例100000 70000\n\n输出样例4550035000\n\n\n提示：本题要使用 long long int 类型。\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;    long long int a, b;    long long int sum = 0;    scanf(&quot;%lld %lld&quot;,&amp;a,&amp;b);    sum=(a+a-b+1)*b/2;    printf(&quot;%lld&quot;, sum);    return 0;&#125;\n\n题目：10 后天如果今天是星期三，后天就是星期五；如果今天是星期六，后天就是星期一。我们用数字1到7对应星期一到星期日。给定某一天，请你输出那天的“后天”是星期几。\n输入格式：输入第一行给出一个正整数D（1 ≤ D ≤ 7），代表星期里的某一天。\n输出格式：在一行中输出D天的后天是星期几。\n输入样例：3\n\n输出样例：5\n\n题解分析代码#include&lt;stdio.h&gt;int main()&#123;int a,b,c;scanf(&quot;%d&quot;,&amp;a);  if(a+2&gt;7)&#123;    b=a+2;    c=b%7;    printf(&quot;%d\\n&quot;,c);&#125;  else&#123;     c=a+2;  printf(&quot;%d\\n&quot;,c);&#125;return 0;&#125;","categories":["PTA","C"],"tags":["C语言","PTA"]}]